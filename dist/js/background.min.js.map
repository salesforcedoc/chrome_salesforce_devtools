{"version":3,"sources":["background.js"],"names":["_gaq","push","ga","document","createElement","type","async","src","s","getElementsByTagName","parentNode","insertBefore","hasReleaseNote","trackEvent","category","action","opt_label","label","chrome","runtime","onInstalled","addListener","details","reason","preVers","previousVersion","split","newVers","getManifest","version","browserAction","setBadgeBackgroundColor","color","setBadgeText","text","onClicked","tab","extensionId","id","releaseUrl","tabs","create","url","active","executeScript","code","JSON","stringify","mode","lastError","console","error","onMessage","data","sender","sendResponse","options","tabid","parseInt","token","ex","sendMessage"],"mappings":"AAAA,GAAIA,MAAOA,QACXA,MAAKC,MAAM,cAAe,kBAC1BD,KAAKC,MAAM,mBAEX,WACE,GAAIC,GAAKC,SAASC,cAAc,SAAWF,GAAGG,KAAO,kBAAmBH,EAAGI,OAAQ,EACnFJ,EAAGK,IAAM,wCACT,IAAIC,GAAIL,SAASM,qBAAqB,UAAU,EAAID,GAAEE,WAAWC,aAAaT,EAAIM,KAGpF,IAAII,iBAAiB,GAGrB,WACE,QAASC,GAAWC,EAAUC,EAAQC,GACpC,GAAIC,GAAQD,GAAa,EACzBhB,MAAKC,MAAM,cAAea,EAAUC,EAAQE,IAE9CC,OAAOC,QAAQC,YAAYC,YAAY,SAASC,GAC9C,GAAqB,WAAlBA,EAAQC,YAEL,IAAqB,UAAlBD,EAAQC,OAAmB,CAClC,GAAIC,GAAUF,EAAQG,gBAAgBC,MAAM,KACxCC,EAAUT,OAAOC,QAAQS,cAAcC,QAAQH,MAAM,IACtDF,GAAQ,KAAOG,EAAQ,IAAMH,EAAQ,KAAOG,EAAQ,KAErDT,OAAOY,cAAcC,yBAA0BC,OAAQ,IAAK,EAAG,EAAG,OAClEd,OAAOY,cAAcG,cAAcC,KAAM,QACzCtB,gBAAiB,MAIvBM,OAAOY,cAAcK,UAAUd,YAAY,SAASe,GAElD,GAAGxB,eAAgB,CACjB,GAAIyB,GAAcnB,OAAOC,QAAQmB,GAC7BC,EAAa,sBAAwBF,EAAc,mBAIvD,OAHAzB,iBAAiB,EACjBM,OAAOY,cAAcG,cAAeC,KAAQ,SAC5ChB,QAAOsB,KAAKC,QAAQC,IAAKH,EAAYI,QAAS,IAIhDzB,OAAOsB,KAAKI,cAAcR,EAAIE,IAC5BO,KAAM,iDAAmDC,KAAKC,WAAWC,KAAM,eAAiB,MAC/F,WAGD,MADA9B,QAAOY,cAAcG,cAAeC,KAAQ,KACxChB,OAAOC,QAAQ8B,UAAkBC,QAAQC,MAAMjC,OAAOC,QAAQ8B,WAAlE,WAIJ/B,OAAOC,QAAQiC,UAAU/B,YAAY,SAAUgC,EAAMC,EAAQC,GAC3D,GAAiB,eAAdF,EAAKhD,KAAsB,CAC5B,GAAImD,GAAUH,EAAKG,WAEnB,OADA3C,GAAY2C,EAAQ1C,UAAY,OAAS0C,EAAQzC,OAAQyC,EAAQvC,OAC1DsC,GAAa,GAGtB,GAAiB,eAAdF,EAAKhD,KAAsB,CAC5B,GAAImD,GAAUH,EAAKG,WAEnB,OADAtC,QAAOsB,KAAKC,QAAQC,IAAKc,EAAQd,IAAKC,QAAS,IACxCY,GAAa,GAItB,GAAiB,iBAAdF,EAAKhD,KAAwB,CAC9B,GAAImD,GAAUH,EAAKG,WAEnB,IAA2B,mBAAjBA,GAAQC,OAAyC,IAAjBD,EAAQC,MAAa,MAC/D,KACEvC,OAAOsB,KAAKI,cAAcc,SAASF,EAAQC,QACzCZ,KAAM,iDAAmDC,KAAKC,WAAWC,KAAM,uBAAwBW,MAAQH,IAAY,MAC1H,WACD,MAAItC,QAAOC,QAAQ8B,UAAkBC,QAAQC,MAAMjC,OAAOC,QAAQ8B,WAAlE,SAEF,MAAOW,GACPV,QAAQC,MAAMS,GAEhB,MAAOL,IAAa,GAGtB,MAAGF,GAAKI,OAAuB,SAAdJ,EAAKL,KAEb9B,OAAOsB,KAAKqB,YAAYR,EAAKI,MAAOJ,GAF7C","file":"background.min.js","sourcesContent":["var _gaq = _gaq || [];\n_gaq.push(['_setAccount', 'UA-43476311-2']);\n_gaq.push(['_trackPageview']);\n\n(function() {\n  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n  ga.src = 'https://www.google-analytics.com/ga.js';\n  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n\nvar hasReleaseNote = false;\n\n// GA Listener\n(function(){\n  function trackEvent(category, action, opt_label) {\n    var label = opt_label || '';\n    _gaq.push(['_trackEvent', category, action, label]);\n  }\n  chrome.runtime.onInstalled.addListener(function(details){\n    if(details.reason == \"install\"){\n      //chrome.tabs.create({url: releaseUrl, active : true});\n    }else if(details.reason == \"update\"){\n      var preVers = details.previousVersion.split('.');\n      var newVers = chrome.runtime.getManifest().version.split('.');\n      if(preVers[0] !== newVers[0] || preVers[1] !== newVers[1]) {\n        // Major release (3.0.0â†’3.1.0)\n        chrome.browserAction.setBadgeBackgroundColor({ color: [255, 0, 0, 255] });\n        chrome.browserAction.setBadgeText({text: 'New'});\n        hasReleaseNote = true;\n      }\n    }\n  });\n  chrome.browserAction.onClicked.addListener(function(tab) {\n    // Open Release Note\n    if(hasReleaseNote) {\n      var extensionId = chrome.runtime.id;\n      var releaseUrl = 'chrome-extension://' + extensionId + '/releasenote.html';\n      hasReleaseNote = false;\n      chrome.browserAction.setBadgeText({ 'text': '' });\n      chrome.tabs.create({url: releaseUrl, active : true});\n      return;\n    }\n    // Open popup\n    chrome.tabs.executeScript(tab.id, {\n      code: 'if(T_callFromBackground) T_callFromBackground(' + JSON.stringify({mode: 'SD_openapp'}) + ');'\n    }, function() {\n      // Clear Bardge Text\n      chrome.browserAction.setBadgeText({ 'text': '' });\n      if (chrome.runtime.lastError) return console.error(chrome.runtime.lastError);\n    });\n  });\n\n  chrome.runtime.onMessage.addListener(function (data, sender, sendResponse) {\n    if(data.type === 'SD_GaTrack'){\n      var options = data.options || {};\n      trackEvent((options.category || 'open'), options.action, options.label);\n      return sendResponse(true);\n    }\n    // open new tab with url \n    if(data.type === 'SD_opentab'){\n      var options = data.options || {};\n      chrome.tabs.create({url: options.url, active : true});\n      return sendResponse(true);\n    }\n    // TODO\n    // callback sfdc oauth\n    if(data.type === 'SD_sfdcoauth'){\n      var options = data.options || {};\n      //console.log('>>>> SD_sfdcoauth options', options);\n      if(typeof options.tabid == 'undefined' || options.tabid == '') return;\n      try{\n        chrome.tabs.executeScript(parseInt(options.tabid), {\n          code: 'if(T_callFromBackground) T_callFromBackground(' + JSON.stringify({mode: 'SD_sfdcoauthcallback', token : options}) + ');'\n        }, function() {\n          if (chrome.runtime.lastError) return console.error(chrome.runtime.lastError);\n        });\n      } catch (ex){\n        console.error(ex);\n      }\n      return sendResponse(true);\n    }\n    // Send from webpage to extension app\n    if(data.tabid && data.mode !== 'CROB') {\n      //console.log('>>> call for extension', data);\n      return chrome.tabs.sendMessage(data.tabid, data);\n    }\n  });\n})();"]}